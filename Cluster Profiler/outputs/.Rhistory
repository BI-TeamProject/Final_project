gene_ID        <- gene_to_ID(filter_dense)
library(clusterProfiler)
library(ggplot2)
organism = 'org.Hs.eg.db'
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler/outputs")
dir.create("BP")
ggo <- groupGO(gene = gene.df$ENTREZID,OrgDb = organism,ont="BP", level=3, readable=TRUE)
ego <- enrichGO(gene = gene.df$ENTREZID,OrgDb = organism, ont="BP", pAdjustMethod="BH", pvalueCutoff  = 0.01,qvalueCutoff  = 0.05,readable=TRUE)
gse <- gseGO(geneList = gene_list,keyType="SYMBOL",OrgDb=organism, ont="BP", nPerm=1000,minGSSize=80,maxGSSize=500,pvalueCutoff = 0.05,verbose = FALSE)
write.csv(as.data.frame(ggo),"BP/ggo_BP.csv")
write.csv(as.data.frame(ego),"BP/ego_BP.csv")
write.csv(as.data.frame(gse),"BP/gse_BP.csv")
png("BP/barplot_BP_ggo.png",width = 780, height = 480)
lapply(paste('package:',names(sessionInfo()$otherPkgs),sep=""),detach,character.only=TRUE,unload=TRUE)
library("rjson")
#--------------Loading genes from file-------
json_file_2 <- "Input_data/dense.json"
dense <- fromJSON(file=json_file_2)
lapply(paste('package:',names(sessionInfo()$otherPkgs),sep=""),detach,character.only=TRUE,unload=TRUE)
library("rjson")
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler")
#--------------Loading genes from file-------
json_file_2 <- "Input_data/dense.json"
dense <- fromJSON(file=json_file_2)
filter_dense <- dense$`TCGA-BRCA`
#----------- Convert Genes into Symbols for the enrichment
library(org.Hs.eg.db)
gene_to_ID <- function(my.symbols){
hs <- org.Hs.eg.db
symbol_to_id <- select(hs,
keys = my.symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
x2 <- na.omit(symbol_to_id$ENTREZID)
return(x2)
}
gene_ID        <- gene_to_ID(filter_dense)
library(clusterProfiler)
library(ggplot2)
organism = 'org.Hs.eg.db'
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler/outputs")
dir.create("BP")
ggo <- groupGO(gene = gene_ID,OrgDb = organism,ont="BP", level=3, readable=TRUE)
ego <- enrichGO(gene = gene_ID,OrgDb = organism, ont="BP", pAdjustMethod="BH", pvalueCutoff  = 0.01,qvalueCutoff  = 0.05,readable=TRUE)
write.csv(as.data.frame(ggo),"BP/ggo_BP.csv")
write.csv(as.data.frame(ego),"BP/ego_BP.csv")
write.csv(as.data.frame(gse),"BP/gse_BP.csv")
png("BP/barplot_BP_ggo.png",width = 780, height = 480)
barplot(ggo, drop=TRUE, showCategory=12)
dev.off()
png("BP/barplot_BP_ego.png",width = 780, height = 480)
barplot(ego, showCategory=8)
dev.off()
png("BP/dotplot_BP.png",width = 780, height = 480)
dotplot(ego)
dev.off()
png("BP/cnet_plot_BP.png",width = 780, height = 480)
cnetplot(ego, categorySize="pvalue", foldChange=df$log2FoldChange)
dev.off()
#png("BP/ridgeplot_BP.png",width = 780, height = 480)
#png("BP/ridgeplot_BP.png",width = 780, height = 480)
#ridgeplot(gse) + labs(x = "enrichment distribution")
lapply(paste('package:',names(sessionInfo()$otherPkgs),sep=""),detach,character.only=TRUE,unload=TRUE)
library("rjson")
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler")
#--------------Loading genes from file-------
json_file_2 <- "Input_data/dense.json"
dense <- fromJSON(file=json_file_2)
filter_dense <- dense$`TCGA-BRCA`
#--------------------------------------------
#----------- Convert Genes into Symbols for the enrichment
library(org.Hs.eg.db)
gene_to_ID <- function(my.symbols){
hs <- org.Hs.eg.db
symbol_to_id <- select(hs,
keys = my.symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
x2 <- na.omit(symbol_to_id$ENTREZID)
return(x2)
}
gene_ID        <- gene_to_ID(filter_dense)
#--------------------Cluster Profiler Enrichment
library(clusterProfiler)
library(ggplot2)
organism = 'org.Hs.eg.db'
#Cellular Component:
dir.create("CC")
ggo <- groupGO(gene = gene_ID,OrgDb = organism,ont="CC", level=5, readable=TRUE)
ego <- enrichGO(gene = gene_ID,OrgDb = organism, ont="CC", pAdjustMethod="BH", pvalueCutoff  = 0.01,qvalueCutoff  = 0.05,readable=TRUE)
#gse <- gseGO(geneList = genes_list,keyType = "ENTREZID",OrgDb = organism, ont="CC", nPerm=1000,minGSSize=80,maxGSSize=500,pvalueCutoff = 0.05,verbose = FALSE)
write.csv(as.data.frame(ggo),"CC/ggo_CC.csv")
write.csv(as.data.frame(ego),"CC/ego_CC.csv")
#write.csv(as.data.frame(gse),"CC/gse_CC.csv")
png("CC/barplot_CC_ggo.png",width = 780, height = 480)
barplot(ggo, drop=TRUE, showCategory=12)
dev.off()
png("CC/barplot_CC_ego.png",width = 780, height = 480)
barplot(ego, showCategory=8)
dev.off()
png("CC/dotplot_CC.png",width = 780, height = 480)
dotplot(ego)
dev.off()
#png("CC/enrich_map_CC.png",width = 780, height = 480)
#emapplot(gse, showCategory = 10)
#dev.off()
png("CC/cnet_plot_CC.png",width = 780, height = 480)
cnetplot(ego, categorySize="pvalue")
dev.off()
options(ggrepel.max.overlaps = Inf)
ggtheme = ggplot2::theme_minimal()
lapply(paste('package:',names(sessionInfo()$otherPkgs),sep=""),detach,character.only=TRUE,unload=TRUE)
library("rjson")
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler")
#--------------Loading genes from file-------
json_file_2 <- "Input_data/dense.json"
dense <- fromJSON(file=json_file_2)
filter_dense <- dense$`TCGA-BRCA`
#--------------------------------------------
#----------- Convert Genes into Symbols for the enrichment
library(org.Hs.eg.db)
gene_to_ID <- function(my.symbols){
hs <- org.Hs.eg.db
symbol_to_id <- select(hs,
keys = my.symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
x2 <- na.omit(symbol_to_id$ENTREZID)
return(x2)
}
gene_ID        <- gene_to_ID(filter_dense)
#--------------------Cluster Profiler Enrichment
library(clusterProfiler)
library(ggplot2)
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler/outputs")
organism = 'org.Hs.eg.db'
#Cellular Component:
dir.create("CC")
ggo <- groupGO(gene = gene_ID,OrgDb = organism,ont="CC", level=5, readable=TRUE)
ego <- enrichGO(gene = gene_ID,OrgDb = organism, ont="CC", pAdjustMethod="BH", pvalueCutoff  = 0.01,qvalueCutoff  = 0.05,readable=TRUE)
#gse <- gseGO(geneList = genes_list,keyType = "ENTREZID",OrgDb = organism, ont="CC", nPerm=1000,minGSSize=80,maxGSSize=500,pvalueCutoff = 0.05,verbose = FALSE)
write.csv(as.data.frame(ggo),"CC/ggo_CC.csv")
write.csv(as.data.frame(ego),"CC/ego_CC.csv")
#write.csv(as.data.frame(gse),"CC/gse_CC.csv")
png("CC/barplot_CC_ggo.png",width = 780, height = 480)
barplot(ggo, drop=TRUE, showCategory=12)
dev.off()
png("CC/barplot_CC_ego.png",width = 780, height = 480)
barplot(ego, showCategory=8)
dev.off()
png("CC/dotplot_CC.png",width = 780, height = 480)
dotplot(ego)
dev.off()
#png("CC/enrich_map_CC.png",width = 780, height = 480)
#emapplot(gse, showCategory = 10)
#dev.off()
png("CC/cnet_plot_CC.png",width = 780, height = 480)
cnetplot(ego, categorySize="pvalue")
dev.off()
options(ggrepel.max.overlaps = Inf)
ggtheme = ggplot2::theme_minimal()
#png("CC/ridgeplot_CC.png",width = 780, height = 480)
#ridgeplot(gse) + labs(x = "enrichment distribution")
#dev.off()
lapply(paste('package:',names(sessionInfo()$otherPkgs),sep=""),detach,character.only=TRUE,unload=TRUE)
library("rjson")
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler")
#--------------Loading genes from file-------
json_file_2 <- "Input_data/dense.json"
dense <- fromJSON(file=json_file_2)
filter_dense <- dense$`TCGA-BRCA`
#--------------------------------------------
#----------- Convert Genes into Symbols for the enrichment
library(org.Hs.eg.db)
gene_to_ID <- function(my.symbols){
hs <- org.Hs.eg.db
symbol_to_id <- select(hs,
keys = my.symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
x2 <- na.omit(symbol_to_id$ENTREZID)
return(x2)
}
gene_ID        <- gene_to_ID(filter_dense)
library(clusterProfiler)
library(ggplot2)
organism = 'org.Hs.eg.db'
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler/outputs")
dir.create("BP")
ggo <- groupGO(gene = gene_ID,OrgDb = organism,ont="BP", level=3, readable=TRUE)
ego <- enrichGO(gene = gene_ID,OrgDb = organism, ont="BP", pAdjustMethod="BH", pvalueCutoff  = 0.01,qvalueCutoff  = 0.05,readable=TRUE)
#gse <- gseGO(geneList = gene_list,keyType="SYMBOL",OrgDb=organism, ont="BP", nPerm=1000,minGSSize=80,maxGSSize=500,pvalueCutoff = 0.05,verbose = FALSE)
write.csv(as.data.frame(ggo),"BP/ggo_BP.csv")
write.csv(as.data.frame(ego),"BP/ego_BP.csv")
write.csv(as.data.frame(gse),"BP/gse_BP.csv")
png("BP/barplot_BP_ggo.png",width = 780, height = 480)
barplot(ggo, drop=TRUE, showCategory=12)
dev.off()
png("BP/barplot_BP_ego.png",width = 780, height = 480)
barplot(ego, showCategory=8)
dev.off()
png("BP/dotplot_BP.png",width = 780, height = 480)
dotplot(ego)
dev.off()
#png("BP/enrich_map_BP.png",width = 780, height = 480)
#emapplot(gse, showCategory = 10)
#dev.off()
png("BP/cnet_plot_BP.png",width = 780, height = 480)
cnetplot(ego, categorySize="pvalue", foldChange=df$log2FoldChange)
dev.off()
#png("BP/ridgeplot_BP.png",width = 780, height = 480)
#ridgeplot(gse) + labs(x = "enrichment distribution")
#dev.off()
lapply(paste('package:',names(sessionInfo()$otherPkgs),sep=""),detach,character.only=TRUE,unload=TRUE)
library("rjson")
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler")
#--------------Loading genes from file-------
json_file_2 <- "Input_data/dense.json"
dense <- fromJSON(file=json_file_2)
filter_dense <- dense$`TCGA-BRCA`
#--------------------------------------------
#----------- Convert Genes into Symbols for the enrichment
library(org.Hs.eg.db)
gene_to_ID <- function(my.symbols){
hs <- org.Hs.eg.db
symbol_to_id <- select(hs,
keys = my.symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
x2 <- na.omit(symbol_to_id$ENTREZID)
return(x2)
}
gene_ID        <- gene_to_ID(filter_dense)
library(clusterProfiler)
library(ggplot2)
organism = 'org.Hs.eg.db'
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler/outputs")
dir.create("BP")
ggo <- groupGO(gene = gene_ID,OrgDb = organism,ont="BP", level=3, readable=TRUE)
ego <- enrichGO(gene = gene_ID,OrgDb = organism, ont="BP", pAdjustMethod="BH", pvalueCutoff  = 0.01,qvalueCutoff  = 0.05,readable=TRUE)
#gse <- gseGO(geneList = gene_list,keyType="SYMBOL",OrgDb=organism, ont="BP", nPerm=1000,minGSSize=80,maxGSSize=500,pvalueCutoff = 0.05,verbose = FALSE)
write.csv(as.data.frame(ggo),"BP/ggo_BP.csv")
write.csv(as.data.frame(ego),"BP/ego_BP.csv")
write.csv(as.data.frame(gse),"BP/gse_BP.csv")
png("BP/barplot_BP_ggo.png",width = 780, height = 480)
barplot(ggo, drop=TRUE, showCategory=12)
dev.off()
png("BP/barplot_BP_ego.png",width = 780, height = 480)
barplot(ego, showCategory=8)
dev.off()
png("BP/dotplot_BP.png",width = 780, height = 480)
dotplot(ego)
dev.off()
#png("BP/enrich_map_BP.png",width = 780, height = 480)
#emapplot(gse, showCategory = 10)
#dev.off()
png("BP/cnet_plot_BP.png",width = 780, height = 480)
cnetplot(ego, categorySize="pvalue")
dev.off()
lapply(paste('package:',names(sessionInfo()$otherPkgs),sep=""),detach,character.only=TRUE,unload=TRUE)
library("rjson")
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler")
#--------------Loading genes from file-------
json_file_2 <- "Input_data/dense.json"
dense <- fromJSON(file=json_file_2)
filter_dense <- dense$`TCGA-BRCA`
#--------------------------------------------
#----------- Convert Genes into Symbols for the enrichment
library(org.Hs.eg.db)
gene_to_ID <- function(my.symbols){
hs <- org.Hs.eg.db
symbol_to_id <- select(hs,
keys = my.symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
x2 <- na.omit(symbol_to_id$ENTREZID)
return(x2)
}
gene_ID        <- gene_to_ID(filter_dense)
library(clusterProfiler)
library(ggplot2)
organism = 'org.Hs.eg.db'
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler/outputs")
dir.create("MF")
ggo <- groupGO(gene = gene_ID,OrgDb = organism,ont="MF", level=3, readable=TRUE)
ego <- enrichGO(gene =gene_ID,OrgDb = organism, ont="MF", pAdjustMethod="BH", pvalueCutoff  = 0.01,qvalueCutoff  = 0.05,readable=TRUE)
#gse <- gseGO(geneList = gene_ID,keyType="SYMBOL",OrgDb=organism, ont="MF", nPerm=1000,minGSSize=80,maxGSSize=500,pvalueCutoff = 0.05,verbose = FALSE)
write.csv(as.data.frame(ggo),"MF/ggo_MF.csv")
write.csv(as.data.frame(ego),"MF/ego_MF.csv")
write.csv(as.data.frame(gse),"MF/gse_MF.csv")
png("MF/barplot_MF_ggo.png",width = 780, height = 480)
barplot(ggo, drop=TRUE, showCategory=12)
dev.off()
png("MF/barplot_MF_ego.png",width = 780, height = 480)
barplot(ego, showCategory=8)
dev.off()
png("MF/dotplot_MF.png",width = 780, height = 480)
dotplot(ego)
dev.off()
#png("MF/enrich_map_MF.png",width = 780, height = 480)
#emapplot(gse, showCategory = 10)
#dev.off()
png("MF/cnnet_plot_MF.png",width = 780, height = 480)
cnetplot(ego, categorySize="pvalue")
dev.off()
png("MF/ridgeplot_MF.png",width = 780, height = 480)
ridgeplot(gse) + labs(x = "enrichment distribution")
dev.off()
lapply(paste('package:',names(sessionInfo()$otherPkgs),sep=""),detach,character.only=TRUE,unload=TRUE)
library("rjson")
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler")
#--------------Loading genes from file-------
json_file_2 <- "Input_data/dense.json"
dense <- fromJSON(file=json_file_2)
filter_dense <- dense$`TCGA-BRCA`
#--------------------------------------------
#----------- Convert Genes into Symbols for the enrichment
library(org.Hs.eg.db)
gene_to_ID <- function(my.symbols){
hs <- org.Hs.eg.db
symbol_to_id <- select(hs,
keys = my.symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
x2 <- na.omit(symbol_to_id$ENTREZID)
return(x2)
}
gene_ID        <- gene_to_ID(filter_dense)
#--------------------Cluster Profiler Enrichment
library(clusterProfiler)
library(ggplot2)
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler/outputs")
organism = 'org.Hs.eg.db'
#Cellular Component:
dir.create("CC")
ggo <- groupGO(gene = gene_ID,OrgDb = organism,ont="CC", level=5, readable=TRUE)
ego <- enrichGO(gene = gene_ID,OrgDb = organism, ont="CC", pAdjustMethod="BH", pvalueCutoff  = 0.01,qvalueCutoff  = 0.05,readable=TRUE)
#gse <- gseGO(geneList = genes_list,keyType = "ENTREZID",OrgDb = organism, ont="CC", nPerm=1000,minGSSize=80,maxGSSize=500,pvalueCutoff = 0.05,verbose = FALSE)
write.csv(as.data.frame(ggo),"CC/ggo_CC.csv")
write.csv(as.data.frame(ego),"CC/ego_CC.csv")
#write.csv(as.data.frame(gse),"CC/gse_CC.csv")
png("CC/barplot_CC_ggo.png",width = 780, height = 480)
barplot(ggo, drop=TRUE, showCategory=12)
dev.off()
png("CC/barplot_CC_ego.png",width = 780, height = 480)
barplot(ego, showCategory=8)
dev.off()
png("CC/dotplot_CC.png",width = 780, height = 480)
dotplot(ego)
dev.off()
#png("CC/enrich_map_CC.png",width = 780, height = 480)
#emapplot(gse, showCategory = 10)
#dev.off()
png("CC/cnet_plot_CC.png",width = 780, height = 480)
cnetplot(ego, categorySize="pvalue")
dev.off()
options(ggrepel.max.overlaps = Inf)
ggtheme = ggplot2::theme_minimal()
#png("CC/ridgeplot_CC.png",width = 780, height = 480)
#ridgeplot(gse) + labs(x = "enrichment distribution")
#dev.off()
lapply(paste('package:',names(sessionInfo()$otherPkgs),sep=""),detach,character.only=TRUE,unload=TRUE)
library("rjson")
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler")
#--------------Loading genes from file-------
json_file_2 <- "Input_data/dense.json"
dense <- fromJSON(file=json_file_2)
filter_dense <- dense$`TCGA-BRCA`
#--------------------------------------------
#----------- Convert Genes into Symbols for the enrichment
library(org.Hs.eg.db)
gene_to_ID <- function(my.symbols){
hs <- org.Hs.eg.db
symbol_to_id <- select(hs,
keys = my.symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
x2 <- na.omit(symbol_to_id$ENTREZID)
return(x2)
}
gene_ID        <- gene_to_ID(filter_dense)
#--------------------Cluster Profiler Enrichment
library(clusterProfiler)
library(ggplot2)
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler/outputs")
organism = 'org.Hs.eg.db'
#Cellular Component:
dir.create("CC")
ggo <- groupGO(gene = gene_ID,OrgDb = organism,ont="CC", level=5, readable=TRUE)
ego <- enrichGO(gene = gene_ID,OrgDb = organism, ont="CC", pAdjustMethod="BH", pvalueCutoff  = 0.01,qvalueCutoff  = 0.05,readable=TRUE)
#gse <- gseGO(geneList = genes_list,keyType = "ENTREZID",OrgDb = organism, ont="CC", nPerm=1000,minGSSize=80,maxGSSize=500,pvalueCutoff = 0.05,verbose = FALSE)
write.csv(as.data.frame(ggo),"CC/ggo_CC.csv")
write.csv(as.data.frame(ego),"CC/ego_CC.csv")
#write.csv(as.data.frame(gse),"CC/gse_CC.csv")
png("CC/barplot_CC_ggo.png",width = 780, height = 480)
barplot(ggo, drop=TRUE, showCategory=12)
dev.off()
png("CC/barplot_CC_ego.png",width = 780, height = 480)
barplot(ego, showCategory=8)
dev.off()
png("CC/dotplot_CC.png",width = 780, height = 480)
dotplot(ego)
dev.off()
#png("CC/enrich_map_CC.png",width = 780, height = 480)
#emapplot(gse, showCategory = 10)
#dev.off()
png("CC/cnet_plot_CC.png",width = 780, height = 480)
cnetplot(ego, categorySize="pvalue")
dev.off()
options(ggrepel.max.overlaps = Inf)
ggtheme = ggplot2::theme_minimal()
#png("CC/ridgeplot_CC.png",width = 780, height = 480)
#ridgeplot(gse) + labs(x = "enrichment distribution")
#dev.off()
lapply(paste('package:',names(sessionInfo()$otherPkgs),sep=""),detach,character.only=TRUE,unload=TRUE)
library("rjson")
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler")
#--------------Loading genes from file-------
json_file_2 <- "Input_data/dense.json"
dense <- fromJSON(file=json_file_2)
filter_dense <- dense$`TCGA-BRCA`
#--------------------------------------------
#----------- Convert Genes into Symbols for the enrichment
library(org.Hs.eg.db)
gene_to_ID <- function(my.symbols){
hs <- org.Hs.eg.db
symbol_to_id <- select(hs,
keys = my.symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
x2 <- na.omit(symbol_to_id$ENTREZID)
return(x2)
}
gene_ID        <- gene_to_ID(filter_dense)
library(clusterProfiler)
library(ggplot2)
organism = 'org.Hs.eg.db'
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler/outputs")
dir.create("BP")
ggo <- groupGO(gene = gene_ID,OrgDb = organism,ont="BP", level=3, readable=TRUE)
ego <- enrichGO(gene = gene_ID,OrgDb = organism, ont="BP", pAdjustMethod="BH", pvalueCutoff  = 0.01,qvalueCutoff  = 0.05,readable=TRUE)
#gse <- gseGO(geneList = gene_list,keyType="SYMBOL",OrgDb=organism, ont="BP", nPerm=1000,minGSSize=80,maxGSSize=500,pvalueCutoff = 0.05,verbose = FALSE)
write.csv(as.data.frame(ggo),"BP/ggo_BP.csv")
write.csv(as.data.frame(ego),"BP/ego_BP.csv")
write.csv(as.data.frame(gse),"BP/gse_BP.csv")
png("BP/barplot_BP_ggo.png",width = 780, height = 480)
barplot(ggo, drop=TRUE, showCategory=12)
dev.off()
png("BP/barplot_BP_ego.png",width = 780, height = 480)
barplot(ego, showCategory=8)
dev.off()
png("BP/dotplot_BP.png",width = 780, height = 480)
dotplot(ego)
dev.off()
#png("BP/enrich_map_BP.png",width = 780, height = 480)
#emapplot(gse, showCategory = 10)
#dev.off()
png("BP/cnet_plot_BP.png",width = 780, height = 480)
cnetplot(ego, categorySize="pvalue")
dev.off()
#png("BP/ridgeplot_BP.png",width = 780, height = 480)
#ridgeplot(gse) + labs(x = "enrichment distribution")
#dev.off()
lapply(paste('package:',names(sessionInfo()$otherPkgs),sep=""),detach,character.only=TRUE,unload=TRUE)
library("rjson")
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler")
#--------------Loading genes from file-------
json_file_2 <- "Input_data/dense.json"
dense <- fromJSON(file=json_file_2)
filter_dense <- dense$`TCGA-BRCA`
#--------------------------------------------
#----------- Convert Genes into Symbols for the enrichment
library(org.Hs.eg.db)
gene_to_ID <- function(my.symbols){
hs <- org.Hs.eg.db
symbol_to_id <- select(hs,
keys = my.symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
x2 <- na.omit(symbol_to_id$ENTREZID)
return(x2)
}
gene_ID        <- gene_to_ID(filter_dense)
library(clusterProfiler)
library(ggplot2)
organism = 'org.Hs.eg.db'
setwd("~/Documents/Courses /2/2.1/BI/Cluster Profiler/outputs")
dir.create("MF")
ggo <- groupGO(gene = gene_ID,OrgDb = organism,ont="MF", level=3, readable=TRUE)
ego <- enrichGO(gene =gene_ID,OrgDb = organism, ont="MF", pAdjustMethod="BH", pvalueCutoff  = 0.01,qvalueCutoff  = 0.05,readable=TRUE)
#gse <- gseGO(geneList = gene_ID,keyType="SYMBOL",OrgDb=organism, ont="MF", nPerm=1000,minGSSize=80,maxGSSize=500,pvalueCutoff = 0.05,verbose = FALSE)
write.csv(as.data.frame(ggo),"MF/ggo_MF.csv")
write.csv(as.data.frame(ego),"MF/ego_MF.csv")
write.csv(as.data.frame(gse),"MF/gse_MF.csv")
png("MF/barplot_MF_ggo.png",width = 780, height = 480)
barplot(ggo, drop=TRUE, showCategory=12)
dev.off()
png("MF/barplot_MF_ego.png",width = 780, height = 480)
barplot(ego, showCategory=8)
dev.off()
png("MF/dotplot_MF.png",width = 780, height = 480)
dotplot(ego)
dev.off()
#png("MF/enrich_map_MF.png",width = 780, height = 480)
#emapplot(gse, showCategory = 10)
#dev.off()
png("MF/cnnet_plot_MF.png",width = 780, height = 480)
cnetplot(ego, categorySize="pvalue")
dev.off()
#png("MF/ridgeplot_MF.png",width = 780, height = 480)
#ridgeplot(gse) + labs(x = "enrichment distribution")
#dev.off()
